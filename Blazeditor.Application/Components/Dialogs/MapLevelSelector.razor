@using Blazeditor.Application.Models

<div class="map-level-selector mb-3">
    <label class="form-label">Map Levels</label>
    <div class="btn-group-vertical w-100" role="group" aria-label="Map Levels">
        @foreach (var level in Levels)
        {
            <div class="d-flex align-items-center mb-1">
                <input type="radio" class="form-check-input me-2" name="levelRadio" value="@level" checked="@(level.Key == ActiveLevel)" @onchange="() => OnLevelSelected.InvokeAsync(level.Key)" />
                <span class="me-2">Level @level.Value.Name</span>
                <button class="btn btn-sm btn-outline-danger ms-auto" title="Remove Level" @onclick="() => OnRemoveLevel.InvokeAsync(level.Key)"><i class="bi bi-trash"></i></button>
            </div>
        }
    </div>
    <button class="btn btn-sm btn-outline-primary mt-2 w-100" @onclick="OnAddLevelClicked"><i class="bi bi-plus"></i> Add Level</button>
</div>

@code {
    [Parameter] public Dictionary<int, TileMap> Levels { get; set; } = new();
    [Parameter] public int ActiveLevel { get; set; }
    [Parameter] public EventCallback<int> OnLevelSelected { get; set; }
    [Parameter] public EventCallback<int> OnRemoveLevel { get; set; }
    [Parameter] public EventCallback OnAddLevel { get; set; }

    private void OnAddLevelClicked()
    {
        OnAddLevel.InvokeAsync();
    }
}
